version: 2.1

orbs:
  slack: circleci/slack@3.4.0
  jq: circleci/jq@1.9.0

jobs:
  build:
    docker:
      - image: circleci/node:12.9
      - image: circleci/mariadb:10.3-ram  #DB
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: 'mouWorks'
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: 'circleci'
          TZ: "Asia/Taipei"  # Set The TimeZone

    working_directory: ~/api.m0u.work
    environment:
      - ZIPFILE_NAME: api-code.tar.gz
    steps:
      - checkout
      - run:
          name: Wait for DB to start
          command: dockerize -wait tcp://127.0.0.1:3306
      - add_ssh_keys:
          fingerprints:
            - "01:65:57:f8:9b:34:4a:04:83:0d:8a:41:c4:42:0f:c1" # AWS LightSail @20191227
#            - "9e:b2:7d:7f:da:69:a4:7f:e6:a8:92:33:76:a1:31:e4" # DigitalOcean Manually created this key

      - slack/notify:
          title: "[Npm Installing] @ api.m0u.work"
          message: "[Api] Npm Installing"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Show Current Location
          command: pwd

      - run:
          name: Init MySQL
          command: |
            sudo apt-get update
            sudo apt install mysql-client

      - run:
          name: Eject .Env file
          command:
            echo -e "DB_USER=${DB_USER}\nDB_PASS=${DB_PASS}\nDB_NAME=${DB_NAME}\nCHATROOM_ID=${CHATROOM_ID}\n}" > .env

      # CircleCI Env
      - run:
          name: Copy OrmConfig -> This one for CircleCI
          command: |
            cp .circleci/ormconfigTemp.json ormconfig.json

      # Should Run Jest Test Here

      - run:
          name: Install Jest for Nodejs Testing
          command: sudo npm install jest -g

#      - run:
#          name: Npm install DEV Package (For Testing)
#          command: npm install --only=dev

      - run:
          name: CompileJS file on the fly
          command:
            npm run build

      # Migration
      - run:
          name: Run DB Migration in CI Env
          command: npm run migration:run

      # Unit Test
      - run:
          name: Run Jest Test
          command: jest

      # End2End Test
      - run:
          name: Run End2End Test w/Jest
          command: npm run test:e2e

      # Production Env
      - run:
          name: Use jQ to inject Production Info
          command: jq '.username = env.DB_USER  | .password = env.DB_PASS ' ormconfig.json >  ormconfigPROD.json

# Switch to Prod-Code Here

      - run:
          name: Switch to Prod
          command: |
            rm ormconfig.json
            mv ormconfigPROD.json ormconfig.json

#      - run:
#          name: CompileJS file on the fly
#          command:
#            npm run build

      - slack/notify:
          title: "[Deploying...] @ api.m0u.work"
          message: "[Api] Deploying"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

      - run:
          name: Packing the codes
          command: tar -czf /tmp/${ZIPFILE_NAME} .

      - run:
          name: Copy the Update Script
          command: cp .circleci/circleci_update.sh /tmp

      # Note: this one we Manually setup the SSH key
      # Create SSH-key @ DigitalOcean Server, then paste the pub key @CircleCI
      - run:
          name: Scp - Copy the file to remote server
          command: scp -o StrictHostKeyChecking=no -P 22 /tmp/${ZIPFILE_NAME} /tmp/circleci_update.sh ubuntu@${PRODUCTION_SERVER}:/tmp

      - run:
          name: Make the Update
          command: ssh ubuntu@${PRODUCTION_SERVER} " cd /tmp && chmod +x circleci_update.sh && ./circleci_update.sh "

      - slack/status:
          fail_only: true
          failure_message: "Api Deploy fail !!"
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

      - slack/notify:
          title: "NodeJS Deploy完成 @ api.m0u.work"
          message: "[Api] Complete!"
          color: "#42e2f4" # Optional: Assign custom colors for each notification
          webhook: ${SLACK_WEBHOOK} # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK

workflows:
  version: 2.1
  build_and_auto_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
